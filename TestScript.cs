using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TestScript : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        /*
        
        변수 선언과 출력
        변수끼리의 대입과 사용
        
        int num = 0;
        print(num);
        int value1 = 2;
        num = value1;
        print(num);
        int value2 = 10;
        num = value2;
        print(num);

        */


        /*
        
        변수의 값 서로 바꾸기

        int a;
        a = 2;
        int b;
        b = 5;
        print("a값 : " + a);
        print("b값 : " + b);
        int temp;
        temp = a;
        a = b;
        b = temp;
        print("a값 : " + a);
        print("b값 : " + b);
        
        */


        /*
         
        두 변수의 연산

        int num1, num2, result;
        num1 = 10;
        num2 = 2;

        result = num1 + num2;
        print("더하기 : " + result);
    
        result = num1 - num2;
        print("빼기 : " + result);
      
        result = num1 * num2;
        print("곱하기 : " + result);
               
        result = num1 / num2;
        print("나누기 : " + result);
     
        result = num1 % num2;
        print("나머지 : " + result);

        */


        /*
        
        정수형의 메모리

        프로그래밍의 방법
        1. 명령을 하듯이 프로그래밍 작성
        2. 내부 구조(메모리)를 생각하며 분석
        두 가지를 같이 해야 시각화가 가능해짐!

        1. 명령
        int num1, num2, sum;
        num1 = 10;
        num2 = 20;
        sum = num1 + num2;
        print(sum);

        2. 내부 구조 생각
        num1, num2, sum이라는 저장 공간에
        num1에는 10 저장
        num2에는 20 저장
        num1, num2 두 값을 더해 결과값을 sum에 대입
        sum의 값 출력

        */


        /*
        
        int: 정수를 선언하기 위한 지시어
        float: 실수를 선언하기 위한 지시어

        두 변수의 연산에서 모든 변수가 float를 사용한다면 소수점까지 구할 수 있음
        하지만 문제점이 발생하는데.. 그건 내일.
         
        */
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
